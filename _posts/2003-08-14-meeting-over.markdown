---
layout: post
title: Meeting Over
date: '2003-08-14 10:12:14 -0700'
mt_id: 447
blog_id: 1
post_id: 447
basename: meeting-over
---
<br />Had a meeting at work today with <a href="http://www.qbt.com/">QBT</a> and <a href="http://www.corillian.com/">Corillian</a> about the future of our enterprise applications. The meeting was very illuminating, but I'm not going to talk about it.<br /><br />Instead, I'm going to talk about how I got to meet Corillian's <acronym title="Chief Technology Officer">CTO</acronym>, <a href="http://c2.com/cgi/wiki?ChrisBrooks">Chris Brooks</a>, who is also a <a href="http://www.chrisbrooks.org/">blogger</a>. He is an amazing CTO who seems to be as comfortable with code as he is with business. He took everyone at the meeting on a whirlwind journey into Microsoft's .NET framework as it relates to Web Services. I had not investigated Web Services past the <acronym title="Simple Object Access Protocol">SOAP</acronym> stage and my <acronym title="eXtensible Markup Language">XML</acronym> knowledge had stopped at the <acronym title="Document Type Definition">DTD</acronym> level because schemas were just coming on to the scene. Schemas were then thought to be a Microsoft-only implementation and so I wasn't interested one bit.<br /><br />They've come a long way, baby! Schemas are now all about interop (at least the <a href="http://xml.apache.org/axis/">non-Microsoft ones</a> are) and they're quite robust. He showed how easy it was to take a schema, run it through Microsoft's xsd.exe, and come out with a C# data object. I'm sure that the open-source community hasn't let Microsoft innovate in a vacuum, so I'll be looking for equivalents in the open-source world. Visual Studio.NET looks like it makes it easy to generate <acronym title="Web Services Definition Language">WSDL</acronym> and consume it readily. My head was spinning towards the end because of the possibilities.<br /><br />The eureka moment for me was when he showed how your C# code need never traverse a <acronym title="Document Object Model">DOM</acronym> to use the XML because of the facile serialization of the XML messages into objects. Wow! XML becomes the data transport, allowing rich data to be conveyed without loss or difficulty. I hope it doesn't come with any significant costs in performance, but Chris assured me that it didn't.<br /><br />The best part of the meeting occurred immediately afterwards when Chris told me that he'd be happy to answer any questions I had about .NET or Web Services any time. Well, or his Chief Architect <a href="http://radio.weblogs.com/0106747/">Scott Hanselman</a>. I will assuredly take him up on his generous offer.<br /><br /><br />
